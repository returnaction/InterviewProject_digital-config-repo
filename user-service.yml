# ========================
# Настройка HTTP-сервера
# ========================
server:
  port: 8081  # user-service будет запущен на http://localhost:8081

# ========================
# Основные настройки Spring Boot
# ========================
spring:
  application:
    name: user-service  # Имя сервиса (для Eureka, Kafka, Config Server и маршрутизации через Gateway)

  # Настройки подключения к базе данных PostgreSQL
  datasource:
    url: jdbc:postgresql://localhost:5432/interviewproject_user_service
    username: postgres
    password: postgres

  # Настройки JPA (Hibernate)
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  # Настройки Kafka (если используешь напрямую)
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: user-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  # Spring Cloud Stream + Kafka
  cloud:
    stream:
      binders:
        kafka:
          type: kafka
          environment:
            spring:
              kafka:
                bootstrap-servers: localhost:9092
      bindings:
        userCreated-out-0:
          destination: user-created-topic
          content-type: application/json
          binder: kafka
        userCreated-in-0:
          destination: user-created-topic
          group: user-group
          content-type: application/json
          binder: kafka

# Настройки Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# Настройки Eureka
eureka:
  instance:
    # Уникальный ID инстанса (нужно для масштабирования)
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
